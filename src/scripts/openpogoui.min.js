"use strict";function setUserName(t){global.user||(global.user=t,document.title="["+t+"] "+document.title)}function startListenToSocket(){inventory.init(global.config.locale),console.log("Connecting to "+global.config.websocket);var t=localStorage.getItem("pokemonSettings");t?global.pokemonSettings=JSON.parse(t):global.pokemonSettings={};var e=io.connect(global.config.websocket+"/event");global.ws=e,e.on("connect",function(){console.log("Connected to Bot"),global.connected=!0,$(".loading").text("Waiting to get GPS coordinates from Bot...")}),e.on("bot_initialized",function(t){Array.isArray(t)&&(t=t.length>0?t[0]:{}),t.username&&(console.log("Bot Ready."),setUserName(t.username),t.storage&&(global.storage={pokemon:t.storage.max_pokemon_storage,items:t.storage.max_item_storage}),global.map.addToPath({lat:t.coordinates[0],lng:t.coordinates[1]})),$(".toolbar").show()}),e.on("position",function(t){global.snipping||global.map.addToPath({lat:t.coordinates[0],lng:t.coordinates[1]})}),e.on("pokestops",function(t){var e=Array.from(t.pokestops.filter(function(t){return 1==t.fort_type}),function(t){return{id:t.fort_id,lat:t.latitude,lng:t.longitude,visited:null!=t.cooldown_timestamp_ms}});global.map.addPokestops(e)}),e.on("pokestop_visited",function(t){global.map.addVisitedPokestop({id:t.pokestop.fort_id,name:"",lat:t.pokestop.latitude,lng:t.pokestop.longitude,visited:!0})}),e.on("pokemon_caught",function(t){var e=t.pokemon,o={id:e.pokemon_id,name:inventory.getPokemonName(e.pokemon_id),cp:e.combat_power,iv:(100*e.potential).toFixed(1),lvl:"",lat:0,lng:0};t.position&&(o.lat=t.position.latitude,o.lng=t.position.longitude),global.map.addCatch(o),pokemonToast(o,{ball:e.pokeball})}),e.on("transfered_pokemon",function(t){}),e.on("pokemon_evolved",function(t){var e={id:t.evolution,name:inventory.getPokemonName(t.evolution)},o=inventory.getPokemonName(t.pokemon.pokemon_id);pokemonToast(e,{title:"A "+o+" Evolved"})}),e.on("inventory_list",function(t){var e=Array.from(Object.keys(t.inventory).filter(function(t){return"count"!=t}),function(e){var o=parseInt(e);return{item_id:o,name:inventory.getItemName(o),count:t.inventory[e]}});global.map.displayInventory(e)}),e.on("pokemon_list",function(t){var e=Array.from(t.pokemon,function(e){var o=global.pokemonSettings[e.pokemon_id-1];return{id:e.unique_id,pokemonId:e.pokemon_id,inGym:null!=e.deployed_fort_id,canEvolve:o&&o.EvolutionIds.length>0,cp:e.combat_power,iv:(100*e.potential).toFixed(1),name:e.nickname||inventory.getPokemonName(e.pokemon_id),candy:t.candy[e.pokemon_id]||0,candyToEvolve:o?o.CandyToEvolve:0,favorite:0!=e.favorite}});global.map.displayPokemonList(e,null,t.eggs_count)}),e.on("eggs_list",function(t){var e=t.egg_incubators.filter(function(t){return 0!=t.target_km_walked||0!=t.start_km_walked});e=Array.from(e,function(e){return t.km_walked=t.km_walked||0,{type:901==e.item_id?"incubator-unlimited":"incubator",totalDist:e.target_km_walked-e.start_km_walked,doneDist:t.km_walked-e.start_km_walked}});var o=Array.from(t.egg_incubators,function(t){return t.pokemon_id}),n=Array.from(t.eggs.filter(function(t){return o.indexOf(t.unique_id)<0}),function(t){return{type:"egg",totalDist:t.total_distance,doneDist:t.walked_distance}});global.map.displayEggsList(e.concat(n))}),e.on("pokemon_found",function(t){console.log(t)}),e.on("player_update",function(t){console.log(t)})}function notimplementedyet(){var t=null;t.onmessage=function(t){var e=JSON.parse(t.data),o=e.Command||e.$type;if(o.indexOf("PokemonSettings")>=0){e.Data.$values;global.pokemonSettings=Array.from(e.Data.$values,function(t){return t.EvolutionIds=t.EvolutionIds.$values,t}),localStorage.setItem("pokemonSettings",JSON.stringify(global.pokemonSettings))}}}function errorToast(t){toastr.error(t,"Error",{progressBar:!0,positionClass:"toast-top-left",timeOut:"5000",closeButton:!0})}function pokemonToast(t,e){if(!global.config.noPopup){e=e||{};var o=e.title||(global.snipping?"Snipe success":"Catch success"),n=global.snipping?toastr.success:toastr.info,i=t.name;t.lvl&&(i+=" (lvl "+t.lvl+")");var s="<div>"+i+"</div><div>";s+="<img src='./assets/pokemon/"+t.id+".png' height='50' />",e.ball&&(s+="<img src='./assets/inventory/"+e.ball+".png' height='30' />"),s+="</div>",n(s,o,{progressBar:!0,positionClass:"toast-bottom-left",timeOut:"5000",closeButton:!0})}}!function(){function t(t){for(var e=window.location.search.substring(1),o=e.split("&"),n=0;n<o.length;n++){var i=o[n].split("=");if(i[0]==t)return i[1]}}var e={locale:"en",websocket:"http://localhost:8000",followPlayer:!1,noPopup:!1,noConfirm:!1,memory:{limit:!0,maxCaught:50,mathPath:1e4,visitedPokestops:250}},o={};if("function"==typeof require){var n,i,s,a;!function(){console.log("Load config from disk"),n=require("path"),i=require("fs");var t=require("electron");s=t.remote,a=n.join(s.app.getPath("userData"),"settings.json");var r=require("./package.json"),l=r.version;o.save=function(t){i.writeFileSync(a,JSON.stringify(t))},o.load=function(){var t=e;try{t=JSON.parse(i.readFileSync(a,"utf-8")),t=Object.assign({},e,t),t.version=l,t.websocket.startsWith("ws")&&(t.websocket=e.websocket),t.memory=e.memory}catch(t){configService.save(e)}return t}}()}else console.log("Load config from storage"),o.load=function(){var o=Object.assign({},e),n=localStorage.getItem("config");n&&Object.assign(o,JSON.parse(n)),o.websocket.startsWith("ws")&&(o.websocket=e.websocket);var i=t("websocket");return i&&(console.log(i),o.websocket=i),o.version="online",o.memory=e.memory,o},o.save=function(t){console.log(t),localStorage.setItem("config",JSON.stringify(t))};window.configService=o}(),function(){function t(t){t=t||"en",$.ajax({url:"assets/json/pokemon."+t+".json",async:!1,success:function(t){e="string"==typeof t?JSON.parse(t):t}}),$.ajax({url:"assets/json/inventory."+t+".json",async:!1,success:function(t){o="string"==typeof t?JSON.parse(t):t}})}var e=null,o=null,n={};n.init=function(e){null==o&&t(e)},n.getPokemonName=function(t){return e[t]},n.getItemName=function(t){return o[t]},window.inventoryService=n}();var Map=function(t){var e=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"),o=L.tileLayer("http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png"),n=L.tileLayer("http://{s}.tile2.opencyclemap.org/transport/{z}/{x}/{y}.png"),i=L.tileLayer("http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png"),s=L.tileLayer("http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg");this.layerPokestops=new L.LayerGroup,this.layerCatches=new L.LayerGroup,this.layerPath=new L.LayerGroup,this.map=L.map(t,{layers:[e,this.layerPokestops,this.layerCatches,this.layerPath]});var a={OpenStreetMap:e,OpenCycleMap:o,"OpenCycleMap Transport":n,Toner:i,Watercolor:s},r={Path:this.layerPath,Pokestops:this.layerPokestops,Catches:this.layerCatches};L.control.layers(a,r).addTo(this.map),this.path=null,this.steps=[],this.catches=[],this.pokestops=[],this.pokemonList=[]};Map.prototype.saveContext=function(){var t=Array.from(this.pokestops,function(t){return{id:t.id,lat:t.lat,lng:t.lng,visited:t.visited}});sessionStorage.setItem("available",!0),sessionStorage.setItem("steps",JSON.stringify(this.steps)),sessionStorage.setItem("catches",JSON.stringify(this.catches)),sessionStorage.setItem("pokestops",JSON.stringify(t))},Map.prototype.loadContext=function(){try{if("true"==sessionStorage.getItem("available")){console.log("Load data from storage to restore session"),this.steps=JSON.parse(sessionStorage.getItem("steps"))||[],this.catches=JSON.parse(sessionStorage.getItem("catches"))||[],this.pokestops=JSON.parse(sessionStorage.getItem("pokestops"))||[],this.steps.length>0&&this.initPath();for(var t=0;t<this.pokestops.length;t++){var e=this.pokestops[t],o=e.visited?"./assets/img/pokestop.png":"./assets/img/pokestop_available.png",n=L.icon({iconUrl:o,iconSize:[30,50]});e.marker=L.marker([e.lat,e.lng],{icon:n,zIndexOffset:50}).bindPopup(e.name).addTo(this.layerPokestops)}this.initCatches(),sessionStorage.setItem("available",!1)}}catch(t){console.log(t)}},Map.prototype.initPath=function(){if(null!=this.path)return!0;if(!this.me){var t=this.steps[this.steps.length-1];this.map.setView([t.lat,t.lng],16),this.me=L.marker([t.lat,t.lng],{zIndexOffset:200}).addTo(this.map).bindPopup(t.lat.toFixed(4)+","+t.lng.toFixed(4)),$(".loading").hide()}if(this.steps.length>=2){var e=Array.from(this.steps,function(t){return L.latLng(t.lat,t.lng)});return this.path=L.polyline(e,{color:"red"}).addTo(this.layerPath),!0}return!1},Map.prototype.initCatches=function(){for(var t=0;t<this.catches.length;t++){var e=this.catches[t],o=L.icon({iconUrl:"./assets/pokemon/"+e.id+".png",iconSize:[50,50],iconAnchor:[20,20]}),n=e.name+" <br /> Cp:"+e.cp+" Iv:"+e.iv+"%";L.marker([e.lat,e.lng],{icon:o,zIndexOffset:100}).bindPopup(n).addTo(this.layerCatches)}},Map.prototype.addToPath=function(t){if(this.steps.push(t),global.config.memory.limit&&this.steps.length>global.config.memory.mathPath){this.layerPath.clearLayers(),this.path=null;var e=Math.floor(.7*global.config.memory.mathPath);this.steps=this.steps.slice(-e)}if(this.initPath()){var o=L.latLng(t.lat,t.lng);this.path.addLatLng(o),this.me.setLatLng(o).getPopup().setContent(t.lat.toFixed(4)+","+t.lng.toFixed(4)),global.config.followPlayer&&this.map.panTo(o,!0)}},Map.prototype.addCatch=function(t){if(!t.lat){if(this.steps.length<=0)return;var e=this.steps[this.steps.length-1];t.lat=e.lat,t.lng=e.lng}var o=t.name+"<br /> CP:"+t.cp+" IV:"+t.iv+"%";if(this.catches.push(t),global.config.memory.limit&&this.catches.length>global.config.memory.maxCaught){console.log("Clean catches");var n=Math.floor(.7*global.config.memory.maxCaught);this.catches=this.catches.slice(-n),this.layerCatches.clearLayers(),this.initCatches()}else{var i=L.icon({iconUrl:"./assets/pokemon/"+t.id+".png",iconSize:[50,50],iconAnchor:[25,25]});L.marker([t.lat,t.lng],{icon:i,zIndexOffset:100}).bindPopup(o).addTo(this.layerCatches)}},Map.prototype.addVisitedPokestop=function(t){if(t.lat){this.pokestops.push(t);var e=this.pokestops.find(function(e){return e.id==t.id});if(e)e.marker.setIcon(L.icon({iconUrl:"./assets/img/pokestop.png",iconSize:[30,50]})),t.name&&e.marker.bindPopup(t.name);else{var o=L.icon({iconUrl:"./assets/img/pokestop.png",iconSize:[30,50]});t.marker=L.marker([t.lat,t.lng],{icon:o,zIndexOffset:50}),t.name&&marker.bindPopup(t.name),t.marker.addTo(this.layerPokestops)}}},Map.prototype.addPokestops=function(t){for(var e=0;e<t.length;e++){var o=t[e],n=this.pokestops.find(function(t){return t.id==o.id});if(n)n.visited&&n.marker.setIcon(L.icon({iconUrl:"./assets/img/pokestop.png",iconSize:[30,50]}));else{var i=o.visited?"./assets/img/pokestop.png":"./assets/img/pokestop_available.png",s=L.icon({iconUrl:i,iconSize:[30,50]});o.marker=L.marker([o.lat,o.lng],{icon:s,zIndexOffset:50}).addTo(this.layerPokestops),this.pokestops.push(o)}}},Map.prototype.displayPokemonList=function(t,e,o){console.log("Pokemon list"),global.active="pokemon",this.pokemonList=t||this.pokemonList,this.eggsCount=o||this.eggsCount||0,e?localStorage.setItem("sortPokemonBy",e):e=localStorage.getItem("sortPokemonBy")||"cp","pokemonId"==e?this.pokemonList=this.pokemonList.sort(function(t,o){return t[e]-o[e]}):this.pokemonList=this.pokemonList.sort(function(t,o){return o[e]-t[e]});var n=this.eggsCount+this.pokemonList.length;$(".inventory .numberinfo").text(n+"/"+global.storage.pokemon);var i=$(".inventory .data");i.html(""),this.pokemonList.forEach(function(t){var e=t.canEvolve&&!t.inGym&&t.candy>=t.candyToEvolve,o=e?"":"style='display:none'",n=e?"canEvolve":"",s=t.favorite?"style='display:none'":"";i.append('\n            <div class="pokemon">\n                <div class="transfer" id=\''+t.id+"'>\n                    <a title='Transfer' href=\"#\" class=\"transferAction "+s+'"><img src="./assets/img/recyclebin.png" /></a>\n                    <a title=\'Evolve\' href="#" class="evolveAction" '+o+'><img src="./assets/img/evolve.png" /></a>\n                </div>\n                <span class="info">CP: <strong>'+t.cp+"</strong> IV: <strong>"+t.iv+'%</strong></span>\n                <span class="info">Candy: '+t.candy+"<span "+o+">/"+t.candyToEvolve+'</span></span>\n                <span class="imgspan '+n+'"><img src="./assets/pokemon/'+t.pokemonId+'.png" /></span>\n                <span class="name">'+t.name+"</span>\n            </div>\n        ")}),$(".pokemonsort").show(),$(".inventory").show().addClass("active")},Map.prototype.displayEggsList=function(t){console.log("Eggs list"),global.active="eggs",$(".inventory .sort").hide(),$(".inventory .numberinfo").text(t.length+"/9");var e=$(".inventory .data");e.html(""),t.forEach(function(t){t&&e.append('\n                <div class="eggs">\n                    <span class="imgspan"><img src="./assets/inventory/'+t.type+'.png" /></span>\n                    <span>'+t.doneDist.toFixed(1)+" / "+t.totalDist.toFixed(1)+" km</span>\n                </div>\n            ")}),$(".inventory").show().addClass("active")},Map.prototype.displayInventory=function(t){console.log("Inventory list"),global.active="inventory",$(".inventory .sort").hide();var e=t.filter(function(t){return 901!=t.item_id}).reduce(function(t,e){return t+e.count},0);$(".inventory .numberinfo").text(e+"/"+global.storage.items);var o=$(".inventory .data");o.html(""),t.forEach(function(t){o.append('\n            <div class="items">\n                <span>x'+t.count+'</span>\n                <span class="imgspan"><img src="./assets/inventory/'+t.item_id+'.png" /></span>\n                <span class="info">'+t.name+"</span>\n            </div>\n        ")}),$(".inventory").show().addClass("active")};var inventory=window.inventoryService;!function(){function t(t,o){e.config.noConfirm?o():vex.dialog.confirm({message:t,callback:function(t){t&&o()}})}var e={storage:{items:350,pokemon:250},snipping:!1};window.global=e,e.config=window.configService.load(),e.version=e.config.version,document.title+=" - "+e.version,$(function(){var o=localStorage.getItem("sortPokemonBy")||"cp";$("#sortBy"+o).addClass("active").siblings().removeClass("active"),$("#pokemonLink").click(function(){"1"==$(".inventory").css("opacity")&&$(".inventory .data .pokemon").length?$(".inventory").removeClass("active"):e.ws.emit("pokemon_list")}),$("#eggsLink").click(function(){"1"==$(".inventory").css("opacity")&&$(".inventory .data .eggs").length?$(".inventory").removeClass("active"):e.ws.emit("eggs_list")}),$("#inventoryLink").click(function(){"1"==$(".inventory").css("opacity")&&$(".inventory .data .items").length?$(".inventory").removeClass("active"):e.ws.emit("inventory_list")}),$("#sortBypokemonId").click(function(){return e.map.displayPokemonList(null,"pokemonId")}),$("#sortBycp").click(function(){return e.map.displayPokemonList(null,"cp")}),$("#sortByiv").click(function(){return e.map.displayPokemonList(null,"iv")}),$("#sortBypokemonId, #sortBycp, #sortByiv").click(function(){$(this).hasClass("active")||$(this).toggleClass("active").siblings().removeClass("active")}),$(".inventory .refresh").click(function(){console.log("Refresh"),e.ws.emit(e.active+"_list")}),$(".inventory .close").click(function(){$(this).parent().removeClass("active"),$(".inventory .sort").hide()}),$(".message .close").click(function(){$(this).parent().hide()}),$(".close").click(function(){e.active=null}),$("#recycleLink").click(function(){sessionStorage.setItem("available",!1),window.location.reload()}),$("#settingsLink").click(function(){e.map.saveContext(),window.location="config.html"}),$(".inventory .data").on("click","a.transferAction",function(){var o=$(this).parent();t("Are you sure you want to transfer this Pokemon?",function(){ga("send","event","transfer"),e.ws.emit("transfer_pokemon",{id:o.attr("id")}),o.parent().fadeOut()})}),$(".inventory .data").on("click","a.evolveAction",function(){var o=$(this).parent();t("Are you sure you want to evolve this Pokemon?",function(){ga("send","event","transfer"),e.ws.emit("evolve_pokemon",{id:o.attr("id")}),o.parent().fadeOut()})}),e.config.websocket?(e.map=new Map("map"),e.map.loadContext(),startListenToSocket()):window.location="config.html"})}(),$(function(){function t(t,e){t=t.replace(/[a-z]/g,""),e=e.replace(/[a-z]/g,"");var o,n,i=/(\.0+)+$/,s=t.replace(i,"").split("."),a=e.replace(i,"").split("."),r=Math.min(s.length,a.length);for(o=0;o<r;o++)if(n=parseInt(s[o],10)-parseInt(a[o],10))return n;return s.length-a.length}function e(){try{var e="https://api.github.com/repos/nicoschmitt/necrobotvisualizer/releases";$.getJSON(e,function(e){e=e.filter(function(t){return!t.prerelease&&!t.draft});var o=e[0].name,n=e[0].html_url;t(o,global.version)>0&&(console.log("New version available: "+o),$(".message .data").html("<div>New version available. Check on GitHub to download it. <a href='"+n+"'>Here</a></div>"),$(".message").show())})}catch(t){console.log(t)}}"function"==typeof require&&e()});